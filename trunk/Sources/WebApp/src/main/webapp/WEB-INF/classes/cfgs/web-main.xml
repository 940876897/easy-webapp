<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
        
		
	<!-- component-scan自动搜索@Component , @Controller , @Service , @Repository等标注的类 
		,多个之间用逗号分隔. <context:component-scan base-package="net.easyUI.willingOX.dao" 
		/> -->
	<context:component-scan base-package="net.easyUI" />

	<!-- applicationContextUtil 是为了使普通Java对象中获取Spring中的Beans方便,此对象拥有getBean()方法,可直接用于获取对应ID的Bean -->
	<bean id="applicationContextUtil" class="net.easyUI.willingOX.common.util.ApplicationContextUtil">
	</bean>


	<bean id="ResourceConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:cfgs/server.properties</value>
			</list>
		</property>
	</bean>

	<!-- view -->
	<bean id="velocityViewCache"
		class="net.easyUI.willingOX.common.util.cache.local.SimpleHashMapCompactCache"></bean>

	<bean id="defaultVelocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="preferFileSystemAccess" value="false" />
		<property name="configLocation" value="WEB-INF/cfgs/velocity.properties"></property>
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">euResourceLoader</prop>
				<prop key="euResourceLoader.resource.loader.class">net.easyUI.willingOX.common.web.velocity.runtime.resource.loader.EuResourceLoader</prop>

				<prop key="input.encoding">GBK</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="default.contentType">text/html;charset=UTF-8</prop>

				<!-- cache directive 相关配置 -->
				<prop key="userdirective">net.easyUI.willingOX.common.web.velocity.directive.CacheDirective
				</prop>
				<!-- direcitive.cache.provider 配置cache的提供者 -->
				<prop key="direcitive.cache.provider">velocityViewCache</prop>
				<!-- direcitive.cache.dev.mode 控制是否打开cache,如果是true,则关闭 -->
				<prop key="direcitive.cache.dev.mode">true</prop>
			</props>
		</property>
	</bean>

	<bean id="viewResolver"
		class="net.easyUI.willingOX.common.web.velocity.resolver.FixedVelocityLayoutViewResolver">
		<property name="velocityEngine" ref="defaultVelocityEngine"></property>
		<property name="order" value="1" />
		<property name="suffix" value=".vm" />
		<property name="prefix" value="views/screen/" />
		<property name="layoutUrl" value="views/layout/common/front-default.vm" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="dateToolAttribute" value="dateTool" />
		<property name="numberToolAttribute" value="numberTool" />
		<property name="toolboxConfigLocation" value="WEB-INF/cfgs/vm-toolbox.xml" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="templateEncoding" value="GBK"></property>
		<property name="exposeRequestAttributes" value="true"></property>
	</bean>
	<!-- JSP模块配置. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="100" />
		<property name="prefix" value="/WEB-INF/views/screen/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- interceptors -->
	<bean id="brokersInterceptor"
		class="net.easyUI.willingOX.common.web.url.URLBrokerLauncherInterceptor">
		<property name="brokers">
			<map>
				<entry key="appServer" value-ref="appServerBroker"></entry>
				<entry key="sslAppServer" value-ref="sslAppServerBroker"></entry>
				<entry key="imageServer" value-ref="imageServerBroker"></entry>
				<entry key="uploadServer" value-ref="uploadServerBroker"></entry>
				<entry key="cdnServer" value-ref="cdnServerBroker"></entry>
			</map>
		</property>
	</bean>

	<!-- adapters -->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	<bean
		class="net.easyUI.willingOX.common.web.adapter.ExtendableAnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
		<property name="customArgumentResolvers">
			<list>
				<!-- 只要在method声明Cookyjar对象,则自动注入 <bean class="com.hundsun.network.melody.common.web.cookyjar.CookyjarArgumentResolver"></bean> -->
				<!-- 只要在method声明UserAgent对象,则自动注入 <bean class="com.hundsun.network.common.web.resolver.UserAgentArgumentResolver"></bean> -->
				<!-- 只要在method声明AdministerAgent对象,则自动注入 <bean class="com.hundsun.network.melody.demo.web.resolver.AdministerAgentArgumentResolver"></bean> -->
			</list>
		</property>
		<property name="methodInvokeInterceptors">
			<list>
				<!-- <bean class="com.hundsun.network.common.access.UserAuthorityHandlerInterceptor"></bean> -->
			</list>
		</property>
	</bean>

	<!-- url mapping -->
	<bean id="defaultHandlerMapping"
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
		<property name="order" value="0" />
		<property name="interceptors">
			<list>
				<ref bean="brokersInterceptor" />
			</list>
		</property>
	</bean>


	<!--Spring的Servlet配置改成/, 而不是.htm , 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能， 
		需要重新设置spring-mvc-3.0.xsd order="1" 这个设置小一点,不然,可能被其它的先执行过去了. -->
	<!-- The resource location from which to serve static content, specified 
		at a Spring Resource pattern. Each location must point to a valid directory. 
		Multiple locations may be specified as a comma-separated list, and the locations 
		will be checked for a given resource in the order specified. For example, 
		a value of "/, classpath:/META-INF/public-web-resources/" will allow resources 
		to be served both from the web app root and from any JAR on the classpath 
		that contains a /META-INF/public-web-resources/ directory, with resources 
		in the web app root taking precedence. -->
	<mvc:resources mapping="/statics/**" location="/statics/,classpath:/statics/"
		order="1" />
	<mvc:resources mapping="/favicon**" location="/" order="1" />
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"> 
		<property name="order" value="100" /> <property name="urlMap"> <map> </map> 
		</property> </bean> -->

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="200" />
		<property name="interceptors">
			<list>
				<ref bean="brokersInterceptor" />
			</list>
		</property>
	</bean>

	<bean id="lastHandlerMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="999" />
		<property name="defaultHandler">
			<bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController"></bean>
		</property>
		<property name="interceptors">
			<list>
				<ref bean="brokersInterceptor" />
			</list>
		</property>
	</bean>

	<!-- 文件上传解析 <bean id="multipartResolver" class="com.hundsun.network.melody.common.web.resolver.MultipartResolver"> 
		<property name="defaultEncoding" value="UTF-8" /> </bean> -->
	<!-- exception resolver <bean class="com.hundsun.network.common.web.resolver.ExceptionResolver"> 
		<property name="webEncoding" value="UTF-8"></property> <property 
		name="errorPagePath" value="/common/errorPage/"></property> <property name="adminLoginReturnParameterName" 
		value="backto"></property> </bean> -->
	<!-- <import resource="web-validation.xml" /> -->
</beans>
